>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> type(bg)
<class '7-base_geometry.BaseGeometry'>

>>> bg = BaseGeometry(None)
Traceback (most recent call last):
TypeError: object() takes no parameters

Methods
=======
>>> bg = BaseGeometry()
>>> print(bg.area) # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE
<bound method BaseGeometry.area of <7-base_geometry.BaseGeometry 
object at...>>
>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented
>>> print(bg.integer_validator) # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE
<bound method BaseGeometry.integer_validator of <7-base_geometry.BaseGeometry 
object at...>>

>>> bg.integer_validator("valid number", 1)

>>> bg.integer_validator("invalid number", "number")
Traceback (most recent call last):
TypeError: invalid number must be an integer

>>> bg.integer_validator("another invalid", True)
Traceback (most recent call last):
TypeError: another invalid must be an integer

